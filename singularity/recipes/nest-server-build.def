Bootstrap: docker
From: ubuntu:18.04

%labels
  AUTHOR Sebastian Spreizer <spreizer@web.de>

%runscript
  uwsgi --http-socket :5000 --uid nest --module nest_server.main:app

%post
  apt update && apt install -y \
  build-essential \
  cmake \
  curl \
  cython3 \
  libgsl-dev \
  libltdl-dev \
  libncurses5-dev \
  libreadline-dev \
  python3-all-dev \
  python3-numpy \
  python3-pip \
  wget

  pip3 install nest-server==2.*.*

  cd /tmp/
  VERSION=2.18.0
  if [ ! -f "v${VERSION}.tar.gz" ]; then
    wget https://github.com/nest/nest-simulator/archive/v${VERSION}.tar.gz
  fi
  tar -zxf v${VERSION}.tar.gz

  rm -rf /tmp/nest-build; mkdir /tmp/nest-build; cd /tmp/nest-build
  cmake -DCMAKE_INSTALL_PREFIX:PATH=/opt/nest/ -Dwith-python=3 /tmp/nest-simulator-${VERSION}
  make -j 4; make install

  rm -rf /tmp/nest-build /tmp/nest-simulator-${VERSION}


%environment
  # NEST is installed here. When you relocate NEST, change this variable.
  export NEST_INSTALL_DIR=/opt/nest

  # NEST finds standard *.sli files $NEST_DATA_DIR/sli
  export NEST_DATA_DIR=$NEST_INSTALL_DIR/share/nest

  # NEST finds help files $NEST_DOC_DIR/help
  export NEST_DOC_DIR=$NEST_INSTALL_DIR/share/doc/nest

  # The path where NEST looks for user modules.
  export NEST_MODULE_PATH=$NEST_INSTALL_DIR/lib/nest

  # The path where the PyNEST bindings are installed.
  export NEST_PYTHON_PREFIX=$NEST_INSTALL_DIR/lib/python3.6/site-packages

  # Prepend NEST to PYTHONPATH in a safe way even if PYTHONPATH is undefined
  export PYTHONPATH=$NEST_PYTHON_PREFIX${PYTHONPATH:+:$PYTHONPATH}

  # Make nest / sli /... executables visible.
  export PATH=$NEST_INSTALL_DIR/bin:$PATH
